name: deploy

on:
  push:
    branches:
      - main
      - develop
    tags:
      - "v*"

env:
  BACKEND_IMAGE_NAME: antoni0832/backend-app
  FRONTEND_IMAGE_NAME: antoni0832/frontend-app
  BACKEND_DIR: backend
  FRONTEND_DIR: frontend
  HELM_DIR: helm-chart
  RELEASE_DEST_DIR: release

jobs:
  build-backend:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up docker hub account
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.BACKEND_DIR }}
          file: ${{ env.BACKEND_DIR }}/Dockerfile
          push: true
          tags: |
            ${{ env.BACKEND_IMAGE_NAME }}:sha-${{ github.sha }}  
            ${{ env.BACKEND_IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.run_id=${{ github.run_id }}

  build-frontend:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up docker hub account
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.FRONTEND_DIR }}
          file: ${{ env.FRONTEND_DIR }}/Dockerfile
          push: true
          tags: |
            ${{ env.FRONTEND_IMAGE_NAME }}:sha-${{ github.sha }}
            ${{ env.FRONTEND_IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.run_id=${{ github.run_id }}

  lint-helm:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Lint Helm chart
        run: |
          helm lint ${{ env.HELM_DIR }}

  release:
    runs-on: ubuntu-24.04
    needs:
      - build-backend
      - build-frontend
      - lint-helm
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Package helm
        run: helm package ${{ env.HELM_DIR }} --destination ${{ env.RELEASE_DEST_DIR }}

      - name: Release artifact
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: v${{ github.ref_name }}
          name: Release v${{ github.ref_name }}
          files: ${{ env.RELEASE_DEST_DIR }}/*.tgz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload released artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-chart
          path: ${{ env.RELEASE_DEST_DIR }}
